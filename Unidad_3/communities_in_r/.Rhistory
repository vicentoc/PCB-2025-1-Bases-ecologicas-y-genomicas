offset=0.5)
tiplabels(pie=to.matrix(ecomorph[anoletree$tip.label],
levels(ecomorph)),piecol=cols,cex=0.3)
legend(x="bottomleft",levels(ecomorph),pch=22,
pt.bg=cols,pt.cex=1.5,bty="n",cex=0.9)
plotTree(sunfish.tree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
ecomorph[anoletree$tip.label]
anoletree$tip.label
ecomorph
sunfish.data
sunfish.data$feeding.mode
sunfish.tree
ecomorph
cols
plotTree(sunfish.tree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
tiplabels(pie=to.matrix(ecomorph[anoletree$tip.label],
levels(ecomorph)),piecol=cols,cex=0.3)
ecomorph[anoletree$tip.label]
cols
tiplabels(pie=to.matrix(cols[sunfish.data$feeding.mode],
levels(cols)),piecol=cols,cex=0.3)
cols[sunfish.data$feeding.mode]
tiplabels(pie=to.matrix(cols[anoletree$tip.label],
levels(ecomorph)),piecol=cols,cex=0.3)
tiplabels(pie=to.matrix(ecomorph[anoletree$tip.label],
levels(ecomorph)),piecol=cols,cex=0.3)
ecomorph[anoletree$tip.label]
cols
## set colors for mapped discrete character
cols<-setNames(c("blue","red"),
levels(sunfish.data$feeding.mode))
plotTree(sunfish.tree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
tiplabels(pie=to.matrix(ecomorph[anoletree$tip.label],
levels(ecomorph)),piecol=cols,cex=0.3)
plotTree(anoletree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
tiplabels(pie=to.matrix(ecomorph[anoletree$tip.label],
levels(ecomorph)),piecol=cols,cex=0.3)
legend(x="bottomleft",levels(ecomorph),pch=22,
pt.bg=cols,pt.cex=1.5,bty="n",cex=0.9)
phylomorphospace(anoletree,anole.data[,2:3],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0.5,1.5),xlab="relative buccal length",
ylab="relative gape width")
##########
ecomorph<-as.factor(getStates(anoletree,"tips"))
getStates(anoletree,"tips")
ecomorph_mammals<-as.factor(getStates(sunfish.tree,"tips"))
ecomorph_mammals
ecomorph_mammals[sunfish.tree$tip.label]
cols
## set colors for mapped discrete character
cols<-setNames(c("blue","red"),
levels(sunfish.data$feeding.mode))
plotTree(sunfish.tree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
ecomorph_mammals<-as.factor(getStates(sunfish.tree,"tips"))
tiplabels(pie=to.matrix(ecomorph_mammals[sunfish.tree$tip.label],
levels(ecomorph_mammals)),piecol=cols,cex=0.3)
tiplabels(pie=to.matrix(ecomorph[anoletree$tip.label],
levels(ecomorph)),piecol=cols,cex=0.3)
phylomorphospace(sunfish.tree,sunfish.data[,3:2],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0,1.2),xlab="relative buccal length",
ylab="relative gape width")
phylomorphospace(sunfish.tree,sunfish.data[,3:2],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0.5,1.5),xlab="relative buccal length",
ylab="relative gape width")
title(main="Phylomorphospace of buccal morphology in Centrarchidae",
font.main=3)
phylomorphospace(sunfish.tree,sunfish.data[,3:2],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0.8,1.5),xlab="relative buccal length",
ylab="relative gape width")
title(main="Phylomorphospace of buccal morphology in Centrarchidae",
font.main=3)
plotTree(sunfish.tree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
ecomorph_mammals<-as.factor(getStates(sunfish.tree,"tips"))
tiplabels(pie=to.matrix(ecomorph_mammals[sunfish.tree$tip.label],
levels(ecomorph_mammals)),piecol=cols,cex=0.3)
tiplabels(pie=to.matrix(ecomorph[anoletree$tip.label],
levels(ecomorph)),piecol=cols,cex=0.3)
ecomorph_sunfish<-as.factor(getStates(sunfish.tree,"tips"))
ecomorph_sunfish<-as.factor(getStates(sunfish.tree,"tips"))
tiplabels(pie=to.matrix(ecomorph_sunfish[sunfish.tree$tip.label],
levels(ecomorph_sunfish)),piecol=cols,cex=0.3)
phylomorphospace(sunfish.tree,sunfish.data[,3:2],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0.8,1.5),xlab="relative buccal length",
ylab="relative gape width")
ecomorph_sunfish<-as.factor(getStates(sunfish.tree,"tips"))
tiplabels(pie=to.matrix(ecomorph_sunfish[sunfish.tree$tip.label],
levels(ecomorph_sunfish)),piecol=cols,cex=0.3)
phylomorphospace(sunfish.tree,sunfish.data[,3:2],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0.8,1.5),xlab="relative buccal length",
ylab="relative gape width")
plotTree(sunfish.tree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
ecomorph_sunfish<-as.factor(getStates(sunfish.tree,"tips"))
tiplabels(pie=to.matrix(ecomorph_sunfish[sunfish.tree$tip.label],
levels(ecomorph_sunfish)),piecol=cols,cex=0.3)
ecomorph_sunfish
tiplabels(pie=to.matrix(ecomorph_sunfish[sunfish.tree$tip.label],
levels(ecomorph_sunfish)),piecol=cols,cex=0.3)
phylomorphospace(sunfish.tree,sunfish.data[,3:2],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0.8,1.5),xlab="relative buccal length",
ylab="relative gape width")
title(main="Phylomorphospace of buccal morphology in Centrarchidae",
font.main=3)
## plot it
plot(mammal.ewMap,legend="log(body mass)")
par(mar=c(5.1,4.1,4.1,2.1)) ## reset margins to default
## extract character of interest
ln.bodyMass<-log(setNames(mammal.data$bodyMass,
rownames(mammal.data)))
## create "edge.widthMap" object
mammal.ewMap<-edge.widthMap(mammal.tree,ln.bodyMass,
min.width=0.05)
## plot it
plot(mammal.ewMap,legend="log(body mass)")
par(mar=c(5.1,4.1,4.1,2.1)) ## reset margins to default
## then plot it:
## set colors for mapped discrete character
cols<-setNames(c("blue","red", "pink","purple", "yellow","green"),
levels(ecomorph))
plotTree(anoletree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
tiplabels(pie=to.matrix(ecomorph[anoletree$tip.label],
levels(ecomorph)),piecol=cols,cex=0.3)
legend(x="bottomleft",levels(ecomorph),pch=22,
pt.bg=cols,pt.cex=1.5,bty="n",cex=0.9)
phylomorphospace(anoletree,anole.data[,2:3],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0.5,1.5),xlab="relative buccal length",
ylab="relative gape width")
title(main="Phylomorphospace of buccal morphology in Centrarchidae",
font.main=3)
anole.data[,2:3]
title(main="Phylomorphospace anoles",
font.main=3)
plotTree(anoletree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
tiplabels(pie=to.matrix(ecomorph[anoletree$tip.label],
levels(ecomorph)),piecol=cols,cex=0.3)
legend(x="bottomleft",levels(ecomorph),pch=22,
pt.bg=cols,pt.cex=1.5,bty="n",cex=0.9)
phylomorphospace(anoletree,anole.data[,2:3],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0.5,1.5),xlab="relative buccal length",
ylab="relative gape width")
title(main="Phylomorphospace anoles",
font.main=3)
# First get our data:
library(phytools)
data(anoletree)
data("anole.data")
nrow(anole.data)
library(Geiger)
library(geiger)
nrow(anole.data)
ecomorph<-as.factor(getStates(anoletree,"tips"))
anoletree<-as.phylo(anoletree)
cols<-setNames(palette()[1:length(levels(ecomorph))],
levels(ecomorph))
## then plot it:
## set colors for mapped discrete character
cols<-setNames(c("blue","red", "pink","purple", "yellow","green"),
levels(ecomorph))
plotTree(anoletree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
tiplabels(pie=to.matrix(ecomorph[anoletree$tip.label],
levels(ecomorph)),piecol=cols,cex=0.3)
legend(x="bottomleft",levels(ecomorph),pch=22,
pt.bg=cols,pt.cex=1.5,bty="n",cex=0.9)
phylomorphospace(anoletree,anole.data[,2:3],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0.5,1.5),xlab="relative buccal length",
ylab="relative gape width")
title(main="Phylomorphospace of anolis lizards",
font.main=3)
#######################################
data(sunfish.tree)
data(sunfish.data)
## set colors for mapped discrete character
cols<-setNames(c("blue","red"),
levels(sunfish.data$feeding.mode))
plotTree(sunfish.tree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
ecomorph_sunfish<-as.factor(getStates(sunfish.tree,"tips"))
tiplabels(pie=to.matrix(ecomorph_sunfish[sunfish.tree$tip.label],
levels(ecomorph_sunfish)),piecol=cols,cex=0.3)
phylomorphospace(sunfish.tree,sunfish.data[,3:2],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0.8,1.5),xlab="relative buccal length",
ylab="relative gape width")
title(main="Phylomorphospace of buccal morphology in Centrarchidae",
font.main=3)
######################################
data(sunfish.tree)
data(sunfish.data)
## set colors for mapped discrete character
cols<-setNames(c("blue","red"),
levels(sunfish.data$feeding.mode))
plotTree(sunfish.tree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
ecomorph_sunfish<-as.factor(getStates(sunfish.tree,"tips"))
tiplabels(pie=to.matrix(ecomorph_sunfish[sunfish.tree$tip.label],
levels(ecomorph_sunfish)),piecol=cols,cex=0.3)
phylomorphospace(sunfish.tree,sunfish.data[,3:2],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0.8,1.5),xlab="relative buccal length",
ylab="relative gape width")
# # Group species accordingly to their genera
chiroptera <- groupOTU(chiroptera,
groupInfo)
# Plot tree using ggtree
ggtree(chiroptera,
aes(color = group),
layout='circular') +
geom_tiplab(size = 1,
aes(angle = angle)) +
theme(legend.position="NULL")
#########################
library(phytools)
data(sunfish.tree)
data(sunfish.data)
## set colors for mapped discrete character
cols<-setNames(c("blue","red"),
levels(sunfish.data$feeding.mode))
plotTree(sunfish.tree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
ecomorph_sunfish<-as.factor(getStates(sunfish.tree,"tips"))
tiplabels(pie=to.matrix(ecomorph_sunfish[sunfish.tree$tip.label],
levels(ecomorph_sunfish)),piecol=cols,cex=0.3)
phylomorphospace(sunfish.tree,sunfish.data[,3:2],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0.8,1.5),xlab="relative buccal length",
ylab="relative gape width")
title(main="Phylomorphospace of buccal morphology in Centrarchidae",
font.main=3)
##################### ECOSPAT ###############
library(ecospat)
library(raster)
## layers
terra::plot(psilocalo.subset.vars$bio02)
##dataframe occurrences
species.csv.all.df <- species.merge.tables.r
head (species.csv.all.df)
load("C:/Users/vicen/OneDrive/Escritorio/pcb_curso_2025-1_bases_ecologicas_y_genomicas/Unidad_2/R_niches.RData")
## layers
terra::plot(psilocalo.subset.vars$bio02)
##dataframe occurrences
species.csv.all.df <- species.merge.tables.r
head (species.csv.all.df)
species.csv.all.df <- species.csv.all.df[ ,c(22,1,2,14,15,15,7,9,12)]
head (species.csv.all.df)
# extract all values from area m
extract.v<-extract(psilocalo.subset.vars,c(1:ncell(psilocalo.subset.vars)))
head(extract.v)
#extract coordenadas
coords <- xyFromCell(psilocalo.subset.vars,1:ncell(psilocalo.subset.vars))
head(coords)
#pegar esas columnas
combine <- cbind(coords,extract.v)
#hacer data frame de ese file
combine.df<-as.data.frame(combine)
###Remove Na
combine.nas <- na.omit(combine.df)
head(combine.nas)
#hacer un muestreo del background de 10000 puntos
library(dplyr)
###Remove Na
combine.nas <- na.omit(combine.df)
head(combine.nas)
#hacer un muestreo del background de 10000 puntos
sample2 <- sample_n(combine.nas, 10000)
head(sample2)
matrix.sp.extract <- na.exclude(ecospat.sample.envar(dfsp=species.csv.all.df,colspxy=2:3,colspkept=1:3,sample2,
colvarxy=1:2,colvar="all",resolution=25))
matrix.sp.extract.s<-cbind(matrix.sp.extract,species.csv.all.df[,1])
head(matrix.sp.extract.s)
names(area_m)
names(matrix.sp.extract.s$area_m)
levels(matrix.sp.extract.s$area_m)
levels(matrix.sp.extract.s$area_m)
matrix.sp.extract.s$area_m
matrix.sp.extract.s<-cbind(matrix.sp.extract,species.csv.all.df[,1])
head(matrix.sp.extract.s)
levels(matrix.sp.extract.s$area_m)
# list of species
levels(matrix.sp.extract.s[,1]) <- c("formosa", "colliei", "pmorio")
matrix.sp.extract.s<-cbind(matrix.sp.extract,species.csv.all.df[,1])
head(matrix.sp.extract.s)
levels(matrix.sp.extract.s$area_m)
factor (matrix.sp.extract.s$area_m)
as.factor(levels((matrix.sp.extract.s$area_m)))
levels((matrix.sp.extract.s$area_m))
factory ((matrix.sp.extract.s$area_m))
factor((matrix.sp.extract.s$area_m))
# list of species
levels(matrix.sp.extract.s[,1]) <- c("formosa", "colliei", "pmorio")
sp.list.c<-levels(matrix.sp.extract.s[,1])
sp.nbocc.c<-c()
#loop #calculate the nb of occurences per species
for (i in 1:length(sp.list.c)){
sp.nbocc.c<-c(sp.nbocc.c,length(which(matrix.sp.extract.s[,1] == sp.list.c[i])))
}
sp.nbocc.c
#my data remove menos de 4 presence points
sp.list.c <- sp.list.c[sp.nbocc.c>4]
nb.sp.c <- length(matrix.sp.extract.s)
# selection of variables to include in the analyses
Xvar.c2<-c(3:8)
nvar.c2 <- length(Xvar.c2)# try with all and then try only worldclim Variables
#################################### PCA-ENVIRONMENT ##################################
library(ade4)
# my pca environment
data.psilocalo<-rbind(matrix.sp.extract.s[,Xvar.c2+1],sample2[,Xvar.c2])
w.calo.psilo <- c(rep(0,nrow(matrix.sp.extract.s)),rep(1,nrow(sample2)))
pca.cal.pc <- dudi.pca(data.psilocalo, row.w = w.calo.psilo, center = TRUE, scale = TRUE, scannf = FALSE, nf = 2)
summary(pca.cal.pc)
matrix.sp.extract.s[,Xvar.c2+1]
sample2[,Xvar.c2]
rep(0,nrow(matrix.sp.extract.s))
rep(1,nrow(sample2))
w.calo.psilo
w.calo.psilo
pca.cal.pc <- dudi.pca(data.psilocalo, row.w = w.calo.psilo, center = TRUE, scale = TRUE, scannf = FALSE, nf = 2)
summary(pca.cal.pc)
####### selection of species ######
sp.list.c
sp.combn.c <- combn(1:2,2)
#paso anterior para hacer matrix 1 x 4
matriz <- matrix(1:3, nrow = 3, ncol = 1)
sp.combn.c
#paso anterior para hacer matrix 1 x 4
matriz <- matrix(1:3, nrow = 3, ncol = 1)
for(i in 1:ncol(matriz)) {
row.sp1.pc <- which(matrix.sp.extract.s[,1] == sp.list.c[matriz[1,i]]) # rows in data corresponding to sp1
row.sp2.pc <- which(matrix.sp.extract.s[,1] == sp.list.c[matriz[2,i]]) # rows in data corresponding to sp2
row.sp3.pc <- which(matrix.sp.extract.s[,1] == sp.list.c[matriz[3,i]]) # rows in data corresponding to sp3
name.sp1.pc <- sp.list.c[matriz[1,i]] #names od spp
name.sp2.pc <- sp.list.c[matriz[2,i]]
name.sp3.pc <- sp.list.c[matriz[3,i]]
}
row.sp1.pc
#predict scores in the axes
scores.clim.pc <- pca.cal.pc$li[(nrow(matrix.sp.extract.s)+1):nrow(data.psilocalo),]  #scores for global climate
scores.sp1.pc <- pca.cal.pc$li[row.sp1.pc,]					#scores for sp1
scores.sp2.pc <- pca.cal.pc$li[row.sp2.pc,]					#scores for sp2
scores.sp3.pc <- pca.cal.pc$li[row.sp3.pc,]					#scores for sp3
# calculation of occurence density
z1.pc <- ecospat.grid.clim.dyn(scores.clim.pc, scores.clim.pc, scores.sp1.pc, R=100)
z2.pc <- ecospat.grid.clim.dyn(scores.clim.pc, scores.clim.pc, scores.sp2.pc, R=100)
z3.pc <- ecospat.grid.clim.dyn(scores.clim.pc, scores.clim.pc, scores.sp3.pc, R=100)
#same plot colors
plot(z1.pc$z)
#library(adegraphics)
par(mfrow=c(2,2))
pmorio.niche.pca<-ecospat.plot.niche (z1.pc, "Psilorhinus", "PCA1", "PCA2", cor=FALSE)
colliei.niche.pca<-ecospat.plot.niche (z2.pc, "C. colliei", "PCA1", "PCA2", cor=FALSE)
formosa.niche.pca<-ecospat.plot.niche (z3.pc, "C. formosa", "PCA1", "PCA2", cor=FALSE)
ecospat.plot.contrib(contrib=pca.cal.pc$co, eigen=pca.cal.pc$eig)
library(ecospat)
overlap_12 <- ecospat.niche.overlap(z1.pc, z2.pc, cor = TRUE)
overlap_12
overlap_13 <- ecospat.niche.overlap(z1.pc, z3.pc, cor = TRUE)
overlap_13
overlap_32 <- ecospat.niche.overlap(z3.pc, z2.pc, cor = TRUE)
overlap_32
ecospat.plot.niche.dyn(z1.pc, z2.pc)
ecospat.plot.niche.dyn(z1.pc, z1.pc)
ecospat.plot.niche.dyn(z1.pc, z3.pc)
ecospat.plot.niche.dyn(z3.pc, z2.pc)
######################
form_colli_ident <- ecospat.niche.equivalency.test(z2.pc, z3.pc, rep = 10, overlap.alternative = "lower")
psilo_psilo_ident <- ecospat.niche.equivalency.test (z1.pc, z1.pc, rep = 10)
ecospat.plot.overlap.test(form_colli_ident, "D", "NO TITLE" )
#ecospat.plot.overlap.test(form_psilo_ident, "D", "NO TITLE" )
#ecospat.plot.overlap.test(psilo_colli_ident, "D", "NO TITLE" )
ecospat.plot.overlap.test(psilo_psilo_ident, "D", "NO TITLE" )
save.image("C:/Users/vicen/OneDrive/Escritorio/pcb_curso_2025-1_bases_ecologicas_y_genomicas/Unidad_2/ecospat_data.RData")
# Plot tree using ggtree
ggtree(chiroptera,
aes(color = group),
layout='circular') +
geom_tiplab(size = 1,
aes(angle = angle)) +
theme(legend.position="NULL")
data(sunfish.tree)
data(sunfish.data)
required.libraries <- c("ape", "picante",
"pez", "phytools",
"vegan", "adephylo",
"phylobase", "geiger",
"mvMORPH", "OUwie",
"hisse", "BAMMtools",
"phylosignal", "Biostrings",
"devtools","ggplot2",
"kableExtra", "betapart", "gridExtra",
"reshape2")
# Load all required libraries at once
lapply(required.libraries, require, character.only = TRUE)
Species_names <- c("Amblycercus_holosericeus",
"Arremonops_chloronotus",
"Arremonops_rufivirgatus",
"Attila_spadiceus",
"Automolus_ochrolaemus",
"Basileuterus_culicivorus",
"Campylorhynchus_yucatanicus",
"Cardinalis_cardinalis",
"Caryothraustes_poliogaster",
"Cercomacroides_tyrannina")
genebank_access <- c(	"AF099355.1",
"FJ547295.1",
"FJ547294.1",
"FJ175963.1",
"HM449831.1",
"AF281022.1",
"MZ380576",
"JF795728",
"EF529915.1",
"FJ175897")
sequences_community_yp <- read.GenBank(genebank_access, seq.names = FALSE, species.names = TRUE,
as.character = FALSE, chunk.size = 400, quiet = TRUE)
sequences_community_yp <- read.GenBank(genebank_access, seq.names = FALSE, species.names = TRUE,
as.character = FALSE, chunk.size = 400, quiet = TRUE)
Species_names <- c("Amblycercus_holosericeus",
"Arremonops_chloronotus",
"Arremonops_rufivirgatus",
"Attila_spadiceus",
"Automolus_ochrolaemus",
"Basileuterus_culicivorus",
"Campylorhynchus_yucatanicus",
"Cardinalis_cardinalis",
"Caryothraustes_poliogaster",
"Cercomacroides_tyrannina")
genebank_access <- c(	"AF099355.1",
"FJ547295.1",
"FJ547294.1",
"FJ175963.1",
"HM449831.1",
"AF281022.1",
"MZ380576",
"JF795728",
"EF529915.1",
"FJ175897")
sequences_community_yp <- read.GenBank(genebank_access, seq.names = FALSE, species.names = TRUE,
as.character = FALSE, chunk.size = 100, quiet = TRUE)
genebank_access <- c(	"AF099355.1",
"FJ547295.1",
"FJ547294.1",
"FJ175963.1",
"HM449831.1",
"AF281022.1",
"MZ380576",
"JF795728",
"EF529915.1",
"FJ175897")
sequences_community_yp <- read.GenBank(genebank_access, seq.names = FALSE, species.names = TRUE,
as.character = FALSE, chunk.size = 100, quiet = TRUE)
library(ape)
sequences_community_yp <- read.GenBank(genebank_access, seq.names = FALSE, species.names = TRUE,
as.character = FALSE, chunk.size = 100, quiet = TRUE)
genebank_access
sequences_community_yp <- read.GenBank(genebank_access, seq.names = FALSE, species.names = TRUE,
as.character = FALSE, chunk.size = 100, quiet = TRUE)
genebank_access <- c(	"AF099355.1",
"FJ547295.1",
"FJ547294.1",
"FJ175963.1",
"HM449831.1")
sequences_community_yp <- read.GenBank(genebank_access, seq.names = FALSE, species.names = TRUE,
as.character = FALSE, chunk.size = 100, quiet = TRUE)
sequences_community_yp
,
genebank_access <- c(	"AF099355.1",
"FJ547295.1",
"FJ547294.1",
"FJ175963.1",
"HM449831.1",
"AF281022.1",
"MZ380576.1",
"JF795728.1")
sequences_community_yp <- read.GenBank(genebank_access, seq.names = FALSE, species.names = TRUE,
as.character = FALSE, chunk.size = 100, quiet = TRUE)
genebank_access <- c(	"AF099355.1",
"FJ547295.1",
"FJ547294.1",
"FJ175963.1",
"HM449831.1",
"AF281022.1")
sequences_community_yp <- read.GenBank(genebank_access, seq.names = FALSE, species.names = TRUE,
as.character = FALSE, chunk.size = 100, quiet = TRUE)
genebank_access <- c(	"AF099355.1",
"FJ547295.1",
"FJ547294.1",
"FJ175963.1",
"MZ380576.1",
"JF795728.1",
"EF529915.1",
"FJ175897.1")
library(ape)
sequences_community_yp <- read.GenBank(genebank_access, seq.names = FALSE, species.names = TRUE,
as.character = FALSE, chunk.size = 100, quiet = TRUE)
